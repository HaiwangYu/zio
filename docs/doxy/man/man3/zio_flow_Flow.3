.TH "zio::flow::Flow" 3 "Fri Jan 3 2020" "ZIO" \" -*- nroff -*-
.ad l
.nh
.SH NAME
zio::flow::Flow
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <flow\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFlow\fP (\fBportptr_t\fP port)"
.br
.RI "create a flow\&. "
.ti -1c
.RI "\fB~Flow\fP ()"
.br
.ti -1c
.RI "void \fBsend_bot\fP (\fBMessage\fP &bot)"
.br
.RI "send a BOT "
.ti -1c
.RI "bool \fBrecv_bot\fP (\fBMessage\fP &bot, int \fBtimeout\fP=\-1)"
.br
.RI "receive a BOT "
.ti -1c
.RI "bool \fBput\fP (\fBMessage\fP &dat)"
.br
.RI "put a payload message into the flow "
.ti -1c
.RI "int \fBslurp_pay\fP (int \fBtimeout\fP)"
.br
.RI "recv any waiting PAY messages "
.ti -1c
.RI "bool \fBget\fP (\fBMessage\fP &dat, int \fBtimeout\fP=\-1)"
.br
.RI "get a payload message from the flow "
.ti -1c
.RI "int \fBflush_pay\fP ()"
.br
.RI "send any accumulated credit as a PAY "
.ti -1c
.RI "bool \fBeot\fP (\fBMessage\fP &msg, int \fBtimeout\fP=\-1)"
.br
.RI "send EOT to other end and wait for reply "
.ti -1c
.RI "bool \fBis_sender\fP () const"
.br
.ti -1c
.RI "int \fBcredits\fP () const"
.br
.ti -1c
.RI "int \fBtotal_credits\fP () const"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 21 of file flow\&.hpp\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "zio::flow::Flow::Flow (\fBzio::portptr_t\fP port)"

.PP
create a flow\&. 
.PP
Definition at line 3 of file flow\&.cpp\&.
.SS "zio::flow::Flow::~Flow ()"

.PP
Definition at line 11 of file flow\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "int zio::flow::Flow::credits () const\fC [inline]\fP"

.PP
Definition at line 97 of file flow\&.hpp\&.
.SS "bool zio::flow::Flow::eot (\fBMessage\fP & msg, int timeout = \fC\-1\fP)"

.PP
send EOT to other end and wait for reply Return false if no EOT was received, otherwise set msg to that EOT message\&. Timeout is in milliseconds or less than zero to wait indefinitely\&.
.PP
Note: if calling in response to an EOT sent from the other end, a subsequent EOT receipt is not expected\&. Use timeout=0\&. 
.PP
Definition at line 193 of file flow\&.cpp\&.
.SS "int zio::flow::Flow::flush_pay ()"

.PP
send any accumulated credit as a PAY A recver will flush pay prior to any get but the application may do this at any time after BOT\&. Number of credits sent is returned\&. This does not block\&. 
.PP
Definition at line 157 of file flow\&.cpp\&.
.SS "bool zio::flow::Flow::get (\fBzio::Message\fP & dat, int timeout = \fC\-1\fP)"

.PP
get a payload message from the flow Return false immediately if an EOT was received instead\&.
.PP
Negative timeout waits forever, otherwise gives timeout in milliseconds to wait for a FLOW message\&. 
.PP
Definition at line 175 of file flow\&.cpp\&.
.SS "bool zio::flow::Flow::is_sender () const\fC [inline]\fP"

.PP
Definition at line 96 of file flow\&.hpp\&.
.SS "bool zio::flow::Flow::put (\fBzio::Message\fP & dat)"

.PP
put a payload message into the flow Return false if an EOT was received in the process\&. 
.PP
Definition at line 124 of file flow\&.cpp\&.
.SS "bool zio::flow::Flow::recv_bot (\fBzio::Message\fP & bot, int timeout = \fC\-1\fP)"

.PP
receive a BOT A timeout, -1 waits forever\&. Return false if timeout occurs\&.
.PP
Server calls \fBsend_bot()\fP first, client calls \fBsend_bot()\fP second; 
.PP
Definition at line 49 of file flow\&.cpp\&.
.SS "void zio::flow::Flow::send_bot (\fBzio::Message\fP & bot)"

.PP
send a BOT Client calls \fBsend_bot()\fP first, server calls \fBsend_bot()\fP second; 
.PP
Definition at line 37 of file flow\&.cpp\&.
.SS "int zio::flow::Flow::slurp_pay (int timeout)"

.PP
recv any waiting PAY messages A sender will slurp prior to a send of a DAT but the application may call this at any time after BOT\&. Number of credits slurped is returned\&. A -1 indicates EOT, which if app calls should respond\&. A -2 indicates protocol error\&. 
.PP
Definition at line 99 of file flow\&.cpp\&.
.SS "int zio::flow::Flow::total_credits () const\fC [inline]\fP"

.PP
Definition at line 98 of file flow\&.hpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ZIO from the source code\&.
